import { db } from './server/db-drizzle';
import * as schema from './shared/drizzle-schema';

async function seedData() {
  console.log('üå± Populando banco de dados com dados de exemplo...');
  
  try {
    // 1. Criar usu√°rios (agentes e administradores)
    console.log('üë• Criando usu√°rios...');
    
    const users = await db.insert(schema.users).values([
      {
        username: 'ana.silva',
        password: 'senha123',
        fullName: 'Ana Silva',
        email: 'ana.silva@helpdesk.com',
        role: 'agent',
        avatarInitials: 'AS'
      },
      {
        username: 'carlos.santos',
        password: 'senha123',
        fullName: 'Carlos Santos',
        email: 'carlos.santos@helpdesk.com',
        role: 'agent',
        avatarInitials: 'CS'
      },
      {
        username: 'maria.oliveira',
        password: 'senha123',
        fullName: 'Maria Oliveira',
        email: 'maria.oliveira@helpdesk.com',
        role: 'manager',
        avatarInitials: 'MO'
      },
      {
        username: 'pedro.costa',
        password: 'senha123',
        fullName: 'Pedro Costa',
        email: 'pedro.costa@helpdesk.com',
        role: 'agent',
        avatarInitials: 'PC'
      },
      {
        username: 'lucia.ferreira',
        password: 'senha123',
        fullName: 'L√∫cia Ferreira',
        email: 'lucia.ferreira@helpdesk.com',
        role: 'admin',
        avatarInitials: 'LF'
      }
    ]).returning();

    console.log(`‚úÖ ${users.length} usu√°rios criados!`);

    // 2. Criar solicitantes (clientes)
    console.log('üè¢ Criando clientes...');
    
    const requesters = await db.insert(schema.requesters).values([
      {
        fullName: 'Roberto Almeida',
        email: 'roberto.almeida@empresa-a.com',
        company: 'Empresa A Ltda',
        avatarInitials: 'RA'
      },
      {
        fullName: 'Fernanda Lima',
        email: 'fernanda.lima@empresa-b.com',
        company: 'Empresa B S.A.',
        avatarInitials: 'FL'
      },
      {
        fullName: 'Marcos Pereira',
        email: 'marcos.pereira@empresa-c.com',
        company: 'Empresa C Corp',
        avatarInitials: 'MP'
      },
      {
        fullName: 'Julia Rodrigues',
        email: 'julia.rodrigues@empresa-d.com',
        company: 'Empresa D Tech',
        avatarInitials: 'JR'
      },
      {
        fullName: 'Antonio Souza',
        email: 'antonio.souza@empresa-e.com',
        company: 'Empresa E Solutions',
        avatarInitials: 'AS'
      },
      {
        fullName: 'Camila Martins',
        email: 'camila.martins@empresa-f.com',
        company: 'Empresa F Digital',
        avatarInitials: 'CM'
      },
      {
        fullName: 'Rafael Dias',
        email: 'rafael.dias@freelancer.com',
        company: 'Freelancer',
        avatarInitials: 'RD'
      },
      {
        fullName: 'Beatriz Castro',
        email: 'beatriz.castro@startup-x.com',
        company: 'Startup X',
        avatarInitials: 'BC'
      }
    ]).returning();

    console.log(`‚úÖ ${requesters.length} clientes criados!`);

    // 3. Criar tickets variados
    console.log('üé´ Criando tickets...');
    
    const tickets = await db.insert(schema.tickets).values([
      {
        subject: 'Sistema n√£o carrega ap√≥s login',
        description: 'Ap√≥s fazer login, a tela fica em branco e n√£o carrega o dashboard principal. J√° tentei limpar cache.',
        status: 'open',
        priority: 'high',
        category: 'technical_support',
        requesterId: requesters[0].id,
        assigneeId: users[0].id
      },
      {
        subject: 'Erro de pagamento na fatura',
        description: 'H√° uma cobran√ßa duplicada na minha fatura do m√™s passado. Preciso de ajuda para resolver.',
        status: 'in_progress',
        priority: 'medium',
        category: 'financial',
        requesterId: requesters[1].id,
        assigneeId: users[1].id
      },
      {
        subject: 'Solicita√ß√£o de novo usu√°rio',
        description: 'Precisamos adicionar um novo funcion√°rio ao sistema. Nome: Jo√£o Silva, Email: joao.silva@empresa-a.com',
        status: 'pending',
        priority: 'low',
        category: 'commercial',
        requesterId: requesters[0].id,
        assigneeId: users[2].id
      },
      {
        subject: 'Relat√≥rios n√£o exportando',
        description: 'Quando tento exportar relat√≥rios em PDF, aparece mensagem de erro "Falha na gera√ß√£o do arquivo".',
        status: 'resolved',
        priority: 'medium',
        category: 'technical_support',
        requesterId: requesters[2].id,
        assigneeId: users[0].id
      },
      {
        subject: 'Lentid√£o no sistema',
        description: 'O sistema est√° muito lento, principalmente na parte de relat√≥rios. Demora mais de 2 minutos para carregar.',
        status: 'open',
        priority: 'high',
        category: 'technical_support',
        requesterId: requesters[3].id,
        assigneeId: users[3].id
      },
      {
        subject: 'Altera√ß√£o de plano',
        description: 'Gostaria de fazer upgrade do plano b√°sico para o plano premium. Quais s√£o os custos?',
        status: 'open',
        priority: 'medium',
        category: 'commercial',
        requesterId: requesters[4].id
      },
      {
        subject: 'Problema na integra√ß√£o com API',
        description: 'A integra√ß√£o com nossa API externa parou de funcionar desde ontem. Erro 500 interno.',
        status: 'in_progress',
        priority: 'critical',
        category: 'technical_support',
        requesterId: requesters[5].id,
        assigneeId: users[4].id
      },
      {
        subject: 'Treinamento para nova funcionalidade',
        description: 'Nosso time precisa de treinamento sobre as novas funcionalidades lan√ßadas.',
        status: 'pending',
        priority: 'low',
        category: 'other',
        requesterId: requesters[6].id,
        assigneeId: users[2].id
      },
      {
        subject: 'Erro ao fazer upload de arquivos',
        description: 'N√£o consigo fazer upload de arquivos maiores que 5MB. Aparece erro de timeout.',
        status: 'open',
        priority: 'medium',
        category: 'technical_support',
        requesterId: requesters[7].id,
        assigneeId: users[1].id
      },
      {
        subject: 'Cobran√ßa indevida',
        description: 'Fui cobrado por um servi√ßo que cancelei no m√™s passado. Preciso de reembolso.',
        status: 'closed',
        priority: 'high',
        category: 'financial',
        requesterId: requesters[1].id,
        assigneeId: users[1].id
      },
      {
        subject: 'Reset de senha n√£o funciona',
        description: 'O link de reset de senha n√£o est√° chegando no meu email. J√° verifiquei spam.',
        status: 'resolved',
        priority: 'medium',
        category: 'technical_support',
        requesterId: requesters[3].id,
        assigneeId: users[0].id
      },
      {
        subject: 'Consulta sobre recursos dispon√≠veis',
        description: 'Gostaria de saber quais recursos est√£o dispon√≠veis no meu plano atual.',
        status: 'open',
        priority: 'low',
        category: 'commercial',
        requesterId: requesters[5].id
      }
    ]).returning();

    console.log(`‚úÖ ${tickets.length} tickets criados!`);

    // 4. Criar templates de email
    console.log('üìß Criando templates de email...');
    
    const emailTemplates = await db.insert(schema.emailTemplates).values([
      {
        name: 'Novo Ticket Criado',
        type: 'new_ticket',
        subject: 'Seu ticket #{ticketId} foi criado com sucesso',
        body: `
Ol√° {requesterName},

Seu ticket foi criado com sucesso!

Detalhes do ticket:
- ID: #{ticketId}
- Assunto: {subject}
- Prioridade: {priority}
- Status: {status}

Acompanhe o progresso atrav√©s do portal de atendimento.

Atenciosamente,
Equipe de Suporte
        `,
        isDefault: true,
        isActive: true
      },
      {
        name: 'Ticket Atribu√≠do',
        type: 'ticket_assignment',
        subject: 'Ticket #{ticketId} foi atribu√≠do para voc√™',
        body: `
Ol√° {assigneeName},

Um novo ticket foi atribu√≠do para voc√™:

- ID: #{ticketId}
- Assunto: {subject}
- Cliente: {requesterName}
- Prioridade: {priority}
- Criado em: {createdAt}

Acesse o sistema para mais detalhes.

Atenciosamente,
Sistema HelpDesk
        `,
        isDefault: true,
        isActive: true
      },
      {
        name: 'Ticket Resolvido',
        type: 'ticket_resolution',
        subject: 'Seu ticket #{ticketId} foi resolvido',
        body: `
Ol√° {requesterName},

Temos o prazer de informar que seu ticket foi resolvido!

Detalhes:
- ID: #{ticketId}
- Assunto: {subject}
- Resolvido por: {assigneeName}
- Data de resolu√ß√£o: {resolvedAt}

Se voc√™ ainda tiver problemas, n√£o hesite em entrar em contato.

Atenciosamente,
Equipe de Suporte
        `,
        isDefault: true,
        isActive: true
      },
      {
        name: 'Boas-vindas Usu√°rio',
        type: 'welcome_user',
        subject: 'Bem-vindo ao Sistema HelpDesk!',
        body: `
Ol√° {userName},

Seja bem-vindo ao nosso sistema de suporte!

Suas credenciais de acesso:
- Usu√°rio: {username}
- Email: {email}

Voc√™ pode acessar o sistema em: http://localhost:5000

Atenciosamente,
Equipe HelpDesk
        `,
        isDefault: true,
        isActive: true
      }
    ]).returning();

    console.log(`‚úÖ ${emailTemplates.length} templates de email criados!`);

    // 5. Resumo final
    console.log('\nüìä Resumo dos dados criados:');
    console.log(`üë• Usu√°rios: ${users.length + 1} (incluindo admin existente)`);
    console.log(`üè¢ Clientes: ${requesters.length + 1} (incluindo Jo√£o Silva existente)`);
    console.log(`üé´ Tickets: ${tickets.length + 1} (incluindo ticket existente)`);
    console.log(`üìß Templates: ${emailTemplates.length}`);
    
    console.log('\nüéâ Popula√ß√£o do banco conclu√≠da com sucesso!');
    console.log('üåê Acesse: http://localhost:5000');
    console.log('üîë Login: admin / admin123');

  } catch (error) {
    console.error('‚ùå Erro ao popular banco:', error);
  }
}

// Configurar DATABASE_URL se n√£o estiver definida
if (!process.env.DATABASE_URL) {
  process.env.DATABASE_URL = 'postgresql://helpdesk_user:helpdesk_password@localhost:5432/helpdesk';
}

seedData().catch(console.error);
