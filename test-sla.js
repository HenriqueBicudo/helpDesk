const { db } = require('./server/db-drizzle');
const schema = require('./shared/drizzle-schema');

async function testSla() {
  try {
    console.log('üîç Verificando tickets com SLA...');
    
    const tickets = await db
      .select()
      .from(schema.tickets)
      .limit(5);
    
    console.log(`üìä Encontrados ${tickets.length} tickets:`);
    console.log('');
    
    tickets.forEach(ticket => {
      console.log(`üé´ Ticket #${ticket.id}:`);
      console.log(`   üìã Assunto: ${ticket.subject.substring(0, 50)}...`);
      console.log(`   üìä Status: ${ticket.status}`);
      console.log(`   üö® Prioridade: ${ticket.priority}`);
      console.log(`   ‚è∞ Response Due At: ${ticket.responseDueAt || 'N√£o definido'}`);
      console.log(`   üîß Solution Due At: ${ticket.solutionDueAt || 'N√£o definido'}`);
      console.log(`   üìù Contract ID: ${ticket.contractId || 'N√£o vinculado'}`);
      console.log(`   üìÖ Criado em: ${ticket.createdAt}`);
      console.log('   ' + '‚îÄ'.repeat(60));
    });
    
    // Verificar quantos tickets t√™m SLA configurado
    const ticketsWithSla = tickets.filter(t => t.responseDueAt || t.solutionDueAt);
    console.log('');
    console.log(`üìà Resumo:`);
    console.log(`   Total de tickets: ${tickets.length}`);
    console.log(`   Tickets com SLA: ${ticketsWithSla.length}`);
    console.log(`   Tickets sem SLA: ${tickets.length - ticketsWithSla.length}`);
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar SLA:', error);
  }
  process.exit(0);
}

testSla();
